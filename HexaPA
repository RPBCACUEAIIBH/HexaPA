#! /bin/python3

import HexaLibPython as HL
import Source
import os


# At first start it may not exist...
if not os.path.exists ("Conversations"):
	os.makedirs ("Conversations")

# At first start it may not exist...
if not os.path.exists ("Audio"):
	os.makedirs ("Audio")
	os.makedirs ("Audio/TTS")
	os.makedirs ("Audio/Recordings")

# Comment this if you want the log to be appended. (It can get large pretty soon due to multiple debug messages / prompt...)
if os.path.exists ("Log.log"):
	os.remove ("Log.log")

if Source.Options.Args.debug:
	HL.HexaLog.LogSettings ('D', 0xFFFF)
elif Source.Options.Args.verbose:
	HL.HexaLog.LogSettings ('I', 0xFFFF)
else:
	HL.HexaLog.LogSettings ('E', 0xFFFF)
HL.HexaLog.Log ("Main: HexaLog initialized!", 'I', Source.LogTrace.Main)

S = Source.Settings () # Load settings
PasswordAccepted = False

CLI = Source.CLI (S)
CLI.Options () # This processes options...
if CLI.K != None:
	K = CLI.K
	PasswordAccepted = CLI.PasswordAccepted

HL.HexaLog.Log ("Main: Opening GUI Window!", 'I', Source.LogTrace.Main)
UI = Source.GUI (S) # First window created here...
while PasswordAccepted == False:
	UI.PasswordRequest ()
	UI.OpenWindow () # Open first window (This will be destroyed when the user inputs the password. This is the only way I could solve exitting the mainloop() to do something outside GUI calss.)
	try:
		HL.HexaLog.Log ("Main: Loading API Key(s)...", 'D', Source.LogTrace.Main)
		K = Source.Keys (S.UserName, UI.PWD)
		if K.UserKey != K.IllegalKey:
			PasswordAccepted = True
		break
	except:
		HL.HexaLog.Log ("Main: Wrong password! Try again. :P", 'E', Source.LogTrace.Main)
		UI = Source.GUI (S) # First window re-created here otherwise can't try again...

Conversation = None
if PasswordAccepted == True:
	UI.SetKeys (K) # New window created here...
	if K.Key_OpenAI:
		HL.HexaLog.Log ("Main: Testing OpenAI API key...", 'D', Source.LogTrace.Main)
		Source.Communicate (Source.Communicate.API_Lookup.get (S.OpenAI_DefaultModel), S.OpenAI_DefaultModel, K.Key_Lookup.get (Source.Communicate.API_Lookup.get (S.OpenAI_DefaultModel)))
	if K.Key_DeepSeek:
		HL.HexaLog.Log ("Main: Testing DeepSeek API key...", 'D', Source.LogTrace.Main)
		Source.Communicate (Source.Communicate.API_Lookup.get (S.DeepSeek_DefaultModel), S.DeepSeek_DefaultModel, K.Key_Lookup.get (Source.Communicate.API_Lookup.get (S.DeepSeek_DefaultModel)))
	if Source.Communicate.Disabled_OpenAI == True and Source.Communicate.Disabled_DeepSeek == True:
		HL.HexaLog.Log ("Main: API Key not found. --> Requesting API key.", 'I', Source.LogTrace.Main)
		UI.RequestKey ()
	else:
		UI.Main ()
	Conversation = UI.InitChain ()
	UI.OpenWindow () # Opening new window here.

	if Conversation != None:
		if Conversation.File != None:
			HL.HexaLog.Log ("Main: Saving conversation!", 'I', Source.LogTrace.Main)
			Conversation.Save ()
	S.SaveSettings ()
	HL.HexaLog.Log ("Main: Saving logs, then exitting.", 'I', Source.LogTrace.Main)
	S.WorkDir.Discard ()
	HL.HexaLog.Log ("", 'I', Source.LogTrace.Main) # Logs are appended, this makes it easier to see in the log file where the program is closed.
else:
	HL.HexaLog.Log ("Main: No password, no chat! :P Good bye!", 'E', Source.LogTrace.Main)
	HL.HexaLog.Log ("", 'I', Source.LogTrace.Main) # Logs are appended, this makes it easier to see in the log file where the program is closed.

HL.HexaLog.LogToFile ("Log.log", True)
